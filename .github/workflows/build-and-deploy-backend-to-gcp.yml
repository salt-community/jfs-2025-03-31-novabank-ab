name: Main Build Backend Deploy

on:
  push:
    branches:
      - main
      - backendDeployWithCache
  workflow_dispatch:

jobs:
  build-artifact-and-push-to-gh:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Cache Maven Local Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build with Maven
        run: |
          cd backend
          mvn clean package

      - name: Upload artifact to gh
        uses: "actions/upload-artifact@v4"
        with:
          name: backend-jar
          path: target/backend-0.0.1-SNAPSHOT.jar

  docker-img-build-and-push:
    runs-on: ubuntu-latest
    needs: build-artifact-and-push-to-gh
    defaults:
      run:
        working-directory: backend
    env:
      IMAGE_URL: ${{ vars.GC_REGION }}-docker.pkg.dev/${{ vars.GC_PROJECT_ID }}/cloud-run-source-deploy/${{ vars.GC_REPO_BACKEND_NAME }}/${{ vars.GC_SERVICE_BACKEND_NAME }}:${{ github.sha }}
    steps:
      - name: Authenticate GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker ${{ vars.GC_REGION }}-docker.pkg.dev

      - name: Download JAR artifact from gh
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: backend

      - name: Docker Build
        run: docker build --no-cache -t ${{ env.IMAGE_URL }} . -f Dockerfile

      - name: Docker Push
        run: docker push $IMAGE_URL

  deploy-to-gcp:
    runs-on: ubuntu-latest
    needs: docker-img-build-and-push
    env:
      IMAGE_URL: ${{ vars.GC_REGION }}-docker.pkg.dev/${{ vars.GC_PROJECT_ID }}/cloud-run-source-deploy/${{ vars.GC_REPO_BACKEND_NAME }}/${{ vars.GC_SERVICE_BACKEND_NAME }}:${{ github.sha }}
    steps:
      - name: Authenticate GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Deploy to Cloud Run Service
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          region: ${{ vars.GC_REGION }}
          service: ${{ vars.GC_SERVICE_BACKEND_NAME }}
          image: ${{ env.IMAGE_URL }}
          env_vars: CLERK_ISSUER_URL=${{ secrets.CLERK_ISSUER_URL }},SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD}},SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }},SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
