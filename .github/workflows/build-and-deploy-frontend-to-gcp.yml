name: Main Build Frontend Deploy

on:
  push:
    branches:
      - main
      - frontend-deploy-with-cache
  workflow_dispatch:

jobs:
  build-artifact-and-push-to-gh:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json')}}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Installing dependencies
        run: |
          cd frontend
          npm install

      - name: Running tests
        run: |
          cd frontend
          npm t

      - name: Build
        run: |
          cd frontend
          npm run build

      - name: Upload artifact to gh
        uses: "actions/upload-artifact@v4"
        with:
          name: frontend-dist
          path: frontend/dist

  docker-img-build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_URL: ${{ vars.GC_REGION }}-docker.pkg.dev/${{ vars.GC_PROJECT_ID }}/cloud-run-source-deploy/${{ vars.GC_REPO_FRONTEND_NAME }}/${{ vars.GC_SERVICE_FRONTEND_NAME }}:${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker ${{ vars.GC_REGION }}-docker.pkg.dev

      - name: Download dist artifact from gh
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend

      - name: Docker Build
        run: docker build --no-cache --build-arg VITE_CLERK_PUBLISHABLE_KEY=${{ vars.VITE_CLERK_PUBLISHABLE_KEY }} -t ${{ env.IMAGE_URL }} -f frontend/Dockerfile frontend

      - name: Docker Push
        run: docker push $IMAGE_URL

  deploy-to-gcp:
    runs-on: ubuntu-latest
    needs: docker-img-build-and-push
    env:
      IMAGE_URL: ${{ vars.GC_REGION }}-docker.pkg.dev/${{ vars.GC_PROJECT_ID }}/cloud-run-source-deploy/${{ vars.GC_REPO_FRONTEND_NAME }}/${{ vars.GC_SERVICE_FRONTEND_NAME }}:${{ github.sha }}
    steps:
      - name: Authenticate GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Deploy to Cloud Run Service
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          region: ${{ vars.GC_REGION }}
          service: ${{ vars.GC_SERVICE_FRONTEND_NAME }}
          image: ${{ env.IMAGE_URL }}
